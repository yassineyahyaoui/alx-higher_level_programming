============================
``100-matrix_mul`` module
============================

``matrix_mul()`` matrix dot multiplication.

::

Importing function from the module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Checking for module docstring:
    >>> m = __import__("100-matrix_mul").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("100-matrix_mul").matrix_mul.__doc__
    >>> len(f) > 1
    True

Now Use it

    >>> matrix_mul(1, [1])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list
    >>> matrix_mul([1], 1)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    [[1, 12, 7], [4, 33, 22], [7, 54, 37]]
    >>> matrix_mul([[1, 2], "abc", [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], "abc"])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists
    >>> matrix_mul([], [[1, 2], [3, 4]])    
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty
    >>> matrix_mul([[1, 2], [3, 4]], [])    
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
    >>> matrix_mul([[]], [[1, 2], [3, 4]])    
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty
    >>> matrix_mul([[1, 2], [3, 4]], [[]])    
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
    >>> matrix_mul([[1, 2], ['four', 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, "five", 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats
    >>> matrix_mul([[1, 2], [4], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
    >>> matrix_mul([[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
