============================
``101-lazy_matrix_mul`` module
============================

``lazy_matrix_mul()`` matrix dot multiplication using numpy.

::

Importing function from the module:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now Use it

    >>> lazy_matrix_mul(1, [1])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list
    >>> lazy_matrix_mul([1], 1)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list
    >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    [[1, 12, 7],
     [4, 33, 22],
     [7, 54, 37]]
    >>> lazy_matrix_mul([[1, 2], "abc", [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists
    >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], "abc"])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists
    >>> lazy_matrix_mul([], [[1, 2], [3, 4]])    
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])    
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
    >>> lazy_matrix_mul([[1, 2], ['four', 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats
    >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, "five", 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats
    >>> lazy_matrix_mul([[1, 2], [4], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size
    >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size
    >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
